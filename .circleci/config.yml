version: 2.1

executors:
  docker-publisher:
    docker:
      # https://github.com/CircleCI-Public/cimg-base
      - image: cimg/base:current

jobs:
  test:
    docker:
      - image: hillliu/terratest
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run:
          name: "Test with terratest"
          command: |
            go test -v ./tests
  build-and-publish:
    parameters:
      docker-tag:
        type: string
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run:
          name: Log time
          command: date
      - run:
          name: Gen Docker file
          command: |
            VER_PREFIX=$(support/VER_PREFIX.sh)
            DOCKER_FILES=$(support/DOCKER_FILES.sh)
            BUILD_FOLDER=${VER_PREFIX}-<< parameters.docker-tag >>
            ./support/build-multi.sh << parameters.docker-tag >>
            ls -la ${BUILD_FOLDER}
            for file in $DOCKER_FILES; do
              echo ""
              echo "###"
              echo "# --- Dockerfile ($file) Content ---"
              echo "###"
              echo ""
              cat ${BUILD_FOLDER}/$file
              echo ""
            done
      - run:
          name: build Docker image
          command: |
            VER_PREFIX=$(support/VER_PREFIX.sh)
            VERSION=$(support/VERSION.sh)
            ALT_VERSION=$(support/ALT_VERSION.sh)
            IMAGE_NAME=$(DOCKER_HUB=1 support/remoteImage.sh)
            BUILD_VERSION=<< parameters.docker-tag >>
            BUILD_FOLDER=${VER_PREFIX}-<< parameters.docker-tag >>
            BUILD_ARG=""
            if [ "x$VERSION" == "x$BUILD_VERSION" ]; then
                BUILD_ARG="--build-arg ALT_VERSION=${ALT_VERSION}"
            fi
            echo "Build ARGS: ${BUILD_ARG}" 
            docker build ${BUILD_ARG} -f ${BUILD_FOLDER}/Dockerfile \
              -t $IMAGE_NAME:${BUILD_VERSION} \
              ./${BUILD_FOLDER}
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            DOCKER_HUB=1 ./compile.sh p << parameters.docker-tag >>
  trigger-pmvc:
    executor: docker-publisher
    steps:
      - run:
          name: Trigger pmvc to test docker image
          ##
          # 1. Create Token
          # https://app.circleci.com/settings/user/tokens
          # 2. Add Environment CIRCLE_TOKEN
          # https://app.circleci.com/settings/project/github/pmvc/docker-pmvc-phpunit/environment-variables
          ##
          command: |
            curl -X POST --url https://circleci.com/api/v2/project/github/pmvc/pmvc/pipeline \
               --header "Content-Type: application/json" \
               --header "Circle-Token: $CIRCLE_TOKEN"

workflows:
  run-job:
    jobs:
      - test
      - build-and-publish:
          requires:
            - test
          matrix:
            parameters:
              docker-tag:
                [
                  "8.2",
                  "8.1",
                  "8.0",
                  "7.4",
                  "7.3",
                  "7.2",
                  "7.1",
                  "7.0",
                  "5.6",
                  "5.5",
                ]
      - trigger-pmvc:
          requires:
            - build-and-publish
  nightly:
    jobs:
      - trigger-pmvc
    triggers:
      - schedule:
          cron: "0 0 1 * *"
          filters:
            branches:
              only:
                - main
